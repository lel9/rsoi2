version: '3.2'

services:
  frontend:
    image: lel9/frontend:latest
    ports:
      - "3000:3000"
    volumes:
      - ~/docker/frontend/logs:/tmp/app
    depends_on:
      - gateway
    networks:
      - frontend

  user-service:
    image: lel9/user_service:latest
    volumes:
      - ~/docker/user_service/logs:/tmp/app
    depends_on:
      - database
      - redis_service
    networks:
      - backend

  exam-service:
    image: lel9/exam_service:latest
    volumes:
      - ~/docker/exam_service/logs:/tmp/app
    depends_on:
      - database
      - redis_service
    networks:
      - backend

  result-service:
    image: lel9/result_service:latest
    volumes:
      - ~/docker/result_service/logs:/tmp/app
    depends_on:
      - database
      - redis_service
    networks:
      - backend

  redis-service:
    image: lel9/redis_service:latest
    volumes:
      - ~/docker/redis_service/logs:/tmp/app
    depends_on:
      - queue
    networks:
      - backend

  session-service:
    image: lel9/session_service:latest
    ports:
      - "8085:8085"
    volumes:
      - ~/docker/session_service/logs:/tmp/app
    depends_on:
      - database
    networks:
      - backend
      - frontend

  gateway:
    image: lel9/gateway:latest
    volumes:
      - ~/docker/gateway/logs:/tmp/app
    depends_on:
      - database
      - redis
      - user_service
      - exam_service
      - result_service
      - redis_service
      - session_service
    networks:
      - backend
      - frontend

  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  database_admin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "olg-199774@mail.ru"
      PGADMIN_DEFAULT_PASSWORD: "password"
    ports:
      - "5000:80"
    volumes:
      - pga4data:/var/lib/pgadmin
    depends_on:
      - database
    networks:
      - backend

  queue:
    image: redis:latest
    deploy:
      placement:
        constraints: [node.role == manager]
    volumes:
      - redis-data:/var/lib/redis/data
    networks:
       - backend
  
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8081:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

networks:
  backend:
  frontend:

volumes:
  pgdata:
  pga4data:
  redis-data:
